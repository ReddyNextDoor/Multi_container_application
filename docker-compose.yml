version: '3.8'

services:
  # MongoDB Database Service
  mongodb:
    image: mongo:7.0
    container_name: todo-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: todoapi
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - todo-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Todo API Service
  todo-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: todo-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://mongodb:27017/todoapi
      DB_NAME: todoapi
      DB_MAX_POOL_SIZE: 10
      DB_SERVER_SELECTION_TIMEOUT: 5000
      DB_SOCKET_TIMEOUT: 45000
    volumes:
      # Mount source code for development (hot reload)
      - ./src:/app/src:ro
      # Mount package.json for dependency changes
      - ./package.json:/app/package.json:ro
      - ./package-lock.json:/app/package-lock.json:ro
    networks:
      - todo-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Development API Service (with nodemon for hot reload)
  todo-api-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: todo-api-dev
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://mongodb:27017/todoapi
      DB_NAME: todoapi
      DB_MAX_POOL_SIZE: 10
      DB_SERVER_SELECTION_TIMEOUT: 5000
      DB_SOCKET_TIMEOUT: 45000
    volumes:
      # Mount entire source for development
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      # Exclude node_modules to avoid conflicts
      - /app/node_modules
    networks:
      - todo-network
    depends_on:
      mongodb:
        condition: service_healthy
    command: ["npm", "run", "dev"]
    profiles:
      - dev

# Named volumes for data persistence
volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

# Custom network for service communication
networks:
  todo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16